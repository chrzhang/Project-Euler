package p002EvenFibonacciNumbers;

import java.util.ArrayList;

public class p002
{
  /**
   * Each new term in the Fibonacci sequence is generated by adding the 
   * previous two terms. By starting with 1 and 2, the first 10 terms will be:
   * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
   * By considering the terms in the Fibonacci sequence whose values do not 
   * exceed four million, find the sum of the even-valued terms.
   * @author Christopher Zhang
   * @param args
   */
  public static void main(String[] args)
  {
    double start = System.currentTimeMillis();
    int max = 4000000;
    ArrayList<Integer> numbers = new ArrayList<Integer>();
    numbers.add(1);
    numbers.add(2);
    while (numbers.get(numbers.size() - 1) < max)
    {
      numbers.add(numbers.get(numbers.size() - 1) + numbers.get
          (numbers.size() - 2));
    }
    numbers.remove(numbers.size() - 1);
    int sum = 0;
    for (int i : numbers)
    {
      if (i % 2 == 0)
      {
        sum += i;
      }
    }
    System.out.println(sum);
    System.out.printf("\nRunning Time: %fms\n", System.currentTimeMillis() - 
        start);
  }
}